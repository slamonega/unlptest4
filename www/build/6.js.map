{"version":3,"sources":["../../src/pages/ordering/address_map/address_map.module.ts","../../src/pages/ordering/address_map/address_map.ts","../../src/pages/ordering/address_completion/address_completion.ts"],"names":[],"mappings":"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","file":"6.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { IonicPageModule } from 'ionic-angular';\r\nimport { AddressMap } from './address_map';\r\nimport { AddressCompletion } from '../address_completion/address_completion';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\n\r\n@NgModule({\r\n\tdeclarations: [\r\n\t\tAddressMap,\r\n\t\tAddressCompletion\r\n\t],\r\n\tentryComponents: [\r\n\t\tAddressCompletion\r\n\t],\r\n\timports: [\r\n\t\tIonicPageModule.forChild(AddressMap),\r\n\t\tTranslateModule.forChild()\r\n\t]\r\n})\r\nexport class AddressMapModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/ordering/address_map/address_map.module.ts","import { Component, ViewChild, ElementRef, NgZone } from '@angular/core';\nimport { IonicPage, ViewController } from 'ionic-angular';\nimport { APIService } from '../../../services/api_service';\nimport { UtilService } from '../../../services/util_service';\nimport { TranslateService } from '@ngx-translate/core';\ndeclare var google;\n\n/**\n * Component for address selection using Google map\n */\n@IonicPage()\n@Component({\n    templateUrl: 'address_map.html'\n})\nexport class AddressMap {\n    @ViewChild('map') mapElement: ElementRef;\n    map: any;\n    marker: any;\n    address;\n    lat;\n    lng;\n    geocoder;\n    mapMode;\n    autocompleteItems;\n    autocomplete;\n    service;\n\n    constructor(\n        private viewCtrl: ViewController,\n        private zone: NgZone,\n        private apiService: APIService,\n        private util: UtilService,\n        private translate: TranslateService\n    ) {\n        this.service = new google.maps.places.AutocompleteService();\n        this.mapMode = true;\n        this.address = '';\n        this.lat = 0;\n        this.lng = 0;\n        this.geocoder = new google.maps.Geocoder();\n        this.autocompleteItems = [];\n        this.autocomplete = {\n            query: ''\n        };\n    }\n\n    ionViewWillEnter() {\n        this.mapMode = true;\n    }\n\n    ionViewDidLoad() {\n        // load delivery areas for current city in case we have more than 1 city\n        if (this.apiService.getSettings().multiple_restaurants) {\n            this.apiService.loadDeliveryAreas(this.apiService.getUserData().city_id).then(() => {\n                this.loadMap();\n            });\n        }\n        else {\n            this.loadMap();\n        }\n    }\n\n    geocodeCoords() {\n        this.geocoder.geocode({\n            location: new google.maps.LatLng(this.lat, this.lng)\n        }, (results, status) => {\n            if (status == 'OK') {\n                this.zone.run(() => {\n                    this.address = results[0].formatted_address;\n                });\n            }\n        });\n    }\n    \n    loadMap() {\n        this.util.showLoader();\n        let latLng = new google.maps.LatLng(55.7469492, 37.62548345);\n        let mapOptions = {\n            center: latLng,\n            zoom: 15,\n            mapTypeId: google.maps.MapTypeId.ROADMAP\n        };\n        this.map = new google.maps.Map(this.mapElement.nativeElement, mapOptions);\n        this.marker = new google.maps.Marker({\n            position: latLng,\n            map: this.map\n        });\n        let delivery_areas = this.apiService.getDeliveryAreas();\n        delivery_areas.forEach((area) => {\n            let poly = new google.maps.Polygon({\n                path: JSON.parse(area.coords),\n                strokeColor: '#00FF00',\n                strokeOpacity: 0.7,\n                fillColor: '#00FF00',\n                fillOpacity: 0.4,\n                strokeWeight: 4\n            });\n            poly.setMap(this.map);\n        });\n        this.map.addListener('dragend', function() {\n            this.zone.run(() => {\n                this.lat = this.map.getCenter().lat();\n                this.lng = this.map.getCenter().lng();\n                this.marker.setPosition({ lat: this.lat, lng: this.lng });\n                this.geocodeCoords();\n            });\n        }.bind(this));\n        this.map.addListener('drag', function () {\n            this.lat = this.map.getCenter().lat();\n            this.lng = this.map.getCenter().lng();\n            this.marker.setPosition({ lat: this.lat, lng: this.lng });\n        }.bind(this));\n        navigator.geolocation.getCurrentPosition((position) => {\n            this.lat = position.coords.latitude;\n            this.lng = position.coords.longitude;\n            let ll = { lat: this.lat, lng: this.lng };\n            this.map.setCenter(ll);\n            this.marker.setPosition(ll);\n            this.geocodeCoords();\n            this.util.hideLoader();\n        }, () => {\n            this.util.hideLoader();\n        }, {\n            timeout: 30000,\n            maximumAge: 600000,\n            enableHighAccuracy: true\n        });\n    }\n\n    closeModal() {\n        this.viewCtrl.dismiss();\n    }\n\n    setAddress() {\n        let delivery_areas = this.apiService.getDeliveryAreas(),\n            in_service_area = false,\n            service_area = null,\n            latLng = new google.maps.LatLng(this.lat, this.lng);\n        delivery_areas.forEach((area) => {\n            let poly = new google.maps.Polygon({paths: JSON.parse(area.coords)});\n            if (google.maps.geometry.poly.containsLocation(latLng, poly)) {\n                in_service_area = true;\n                service_area = area;\n            }\n        });\n        if (in_service_area) {\n            this.viewCtrl.dismiss({\n                address: this.address,\n                lat: this.lat,\n                lng: this.lng,\n                service_area: service_area\n            });\n        }\n        else {\n            this.util.alert(this.translate.instant('map.no_service'), '');\n        }\n    }\n\n    showAddressCompletionWindow() {\n        this.mapMode = false;\n    }\n\n    updateSearch() {\n        if (this.autocomplete.query == '') {\n            this.autocompleteItems = [];\n            return;\n        }\n        let me = this;\n        this.service.getPlacePredictions({\n            input: this.autocomplete.query\n            // uncomment to apply restrictions\n            // componentRestrictions: {\n            //     country: 'TH'\n            // }\n        }, function (predictions, status) {\n            me.autocompleteItems = [];\n            me.zone.run(function () {\n                predictions.forEach(function (prediction) {\n                    me.autocompleteItems.push(prediction.description);\n                });\n            });\n        });\n    }\n\n    chooseItem(item) {\n        let me = this;\n        this.geocoder.geocode({\n            address: item\n        }, (results, status) => {\n            if (status == 'OK') {\n                this.address = item;\n                this.lat = results[0].geometry.location.lat();\n                this.lng = results[0].geometry.location.lng();\n                let ll = { lat: this.lat, lng: this.lng };\n                this.map.setCenter(ll);\n                this.marker.setPosition(ll);\n                this.setAddress();\n                me.zone.run(() => {\n                    this.mapMode = true;\n                });\n            }\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/ordering/address_map/address_map.ts","import { Component, NgZone } from '@angular/core';\nimport { ViewController, ModalController } from 'ionic-angular';\ndeclare var google;\n\n/**\n * Address autocomplete with google suggestions component\n */\n@Component({\n    templateUrl: 'address_completion.html'\n})\nexport class AddressCompletion {\n    autocompleteItems;\n    autocomplete;\n    geocoder;\n    service;\n\n    constructor(\n        private viewCtrl: ViewController,\n        private zone: NgZone\n    ) {\n        this.service = new google.maps.places.AutocompleteService();\n        this.geocoder = new google.maps.Geocoder();\n        this.autocompleteItems = [];\n        this.autocomplete = {\n            query: ''\n        };\n    }\n\n    closeModal() {\n        this.viewCtrl.dismiss();\n    }\n\n    updateSearch() {\n        if (this.autocomplete.query == '') {\n            this.autocompleteItems = [];\n            return;\n        }\n        let me = this;\n        this.service.getPlacePredictions({\n            input: this.autocomplete.query//,\n            // componentRestrictions: {\n            //     country: 'TH'\n            // }\n        }, function (predictions, status) {\n            me.autocompleteItems = [];\n            me.zone.run(function () {\n                predictions.forEach(function (prediction) {\n                    me.autocompleteItems.push(prediction.description);\n                });\n            });\n        });\n    }\n\n    chooseItem(item) {\n        this.geocoder.geocode({\n            address: item\n        }, (results, status) => {\n            if (status == 'OK') {\n                this.viewCtrl.dismiss({\n                    address: item,\n                    lat: results[0].geometry.location.lat(),\n                    lng: results[0].geometry.location.lng()\n                });\n            }\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/ordering/address_completion/address_completion.ts"],"sourceRoot":""}