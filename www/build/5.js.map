{"version":3,"sources":["../../src/pages/ordering/order/order.module.ts","../../node_modules/@ionic-native/stripe/index.js","../../node_modules/@ionic-native/paypal/index.js","../../src/pages/ordering/order/order.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAyC;AACO;AACZ;AACkB;AACR;AACA;AACwB;AAgBtE;IAAA;IAA8B,CAAC;IAAlB,eAAe;QAd3B,+DAAQ,CAAC;YACT,YAAY,EAAE;gBACb,yDAAS;aACT;YACD,OAAO,EAAE;gBACR,sEAAe,CAAC,QAAQ,CAAC,yDAAS,CAAC;gBACnC,oFAAmB;gBACnB,4EAAe,CAAC,QAAQ,EAAE;aAC1B;YACD,SAAS,EAAE;gBACV,oEAAM;gBACN,oEAAM;aACN;SACD,CAAC;OACW,eAAe,CAAG;IAAD,sBAAC;CAAA;AAAH;;;;;;;;;ACtB5B;AAAA;AAAA;AAAA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AAC2C;AAC6B;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,OAAO;AACrC,gBAAgB;AAChB;AACA,oEAAoE,QAAQ;AAC5E;AACA;AACA,sBAAsB,sBAAsB;AAC5C,gBAAgB,4BAA4B;AAC5C;AACA,0DAA0D,QAAQ;AAClE;AACA;AACA,sBAAsB,wBAAwB;AAC9C,gBAAgB,gBAAgB;AAChC;AACA,iEAAiE,QAAQ;AACzE;AACA;AACA,0BAA0B,OAAO;AACjC,gBAAgB,aAAa;AAC7B;AACA,iEAAiE,QAAQ;AACzE;AACA;AACA,mBAAmB,OAAO;AAC1B,gBAAgB,aAAa;AAC7B;AACA,mDAAmD,QAAQ;AAC3D;AACA;AACA,wBAAwB,OAAO;AAC/B,uBAAuB,OAAO;AAC9B,gBAAgB,aAAa;AAC7B;AACA,wEAAwE,QAAQ;AAChF;AACA;AACA,0BAA0B,OAAO;AACjC,gBAAgB,gBAAgB;AAChC;AACA,0DAA0D,QAAQ;AAClE;AACA,SAAS,OAAO,yDAAU,EAAE;AAC5B;AACA;AACA,yCAAyC,WAAW;AACpD;AACA,QAAQ,2EAAO;AACf;AACA;AACA;AACA;AACA;AACA,QAAQ,2EAAO;AACf;AACA;AACA;AACA;AACA;AACA,QAAQ,2EAAO;AACf;AACA;AACA;AACA;AACA;AACA,QAAQ,2EAAO;AACf;AACA;AACA;AACA;AACA;AACA,QAAQ,2EAAO;AACf;AACA;AACA;AACA;AACA;AACA,QAAQ,2EAAO;AACf;AACA;AACA;AACA;AACA;AACA,QAAQ,2EAAO;AACf;AACA;AACA;AACA;AACA;AACA,QAAQ,0EAAM;AACd;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC,CAAC,6EAAiB;AACD;AAClB,iC;;;;;;;;AC/JA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AAC2C;AAC6B;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,6CAA6C;AACxD;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA,QAAQ;AACR,MAAM;AACN;AACA,MAAM;AACN,IAAI;AACJ;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,kBAAkB;AACjC,iBAAiB;AACjB;AACA,iEAAiE,QAAQ;AACzE;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,oBAAoB;AACnC,iBAAiB;AACjB;AACA,8EAA8E,QAAQ;AACtF;AACA;AACA;AACA;AACA;AACA,eAAe,cAAc;AAC7B,iBAAiB;AACjB;AACA,iEAAiE,QAAQ;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,qDAAqD,QAAQ;AAC7D;AACA;AACA,iBAAiB;AACjB;AACA,0DAA0D,QAAQ;AAClE;AACA;AACA;AACA,eAAe,cAAc;AAC7B;AACA,iBAAiB;AACjB;AACA,iEAAiE,QAAQ;AACzE;AACA,SAAS,OAAO,yDAAU,EAAE;AAC5B;AACA;AACA,yCAAyC,WAAW;AACpD;AACA,QAAQ,2EAAO;AACf;AACA;AACA;AACA;AACA;AACA,QAAQ,2EAAO;AACf;AACA;AACA;AACA;AACA;AACA,QAAQ,2EAAO;AACf;AACA;AACA;AACA;AACA;AACA,QAAQ,2EAAO;AACf;AACA;AACA;AACA;AACA;AACA,QAAQ,2EAAO;AACf;AACA;AACA;AACA;AACA;AACA,QAAQ,2EAAO;AACf;AACA;AACA;AACA;AACA;AACA,QAAQ,2EAAO;AACf;AACA;AACA;AACA;AACA;AACA,QAAQ,0EAAM;AACd;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC,CAAC,6EAAiB;AACD;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACwB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACqB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAC+B;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAC8B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACgC;AACjC,iC;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3UwC;AACmB;AACF;AACmB;AACrB;AAC6C;AACxD;AACoC;AAC3B;AACM;AAE3D;;GAEG;AAKH;IAaE,mBACU,IAAiB,EACjB,UAAsB,EACtB,OAAoB,EACpB,SAA0B,EAC3B,QAAwB,EACvB,SAA0B,EAC1B,WAA8B,EAC9B,cAAmC,EACnC,MAAc,EACd,MAAc,EACd,IAAiB,EACjB,SAA2B;QAX3B,SAAI,GAAJ,IAAI,CAAa;QACjB,eAAU,GAAV,UAAU,CAAY;QACtB,YAAO,GAAP,OAAO,CAAa;QACpB,cAAS,GAAT,SAAS,CAAiB;QAC3B,aAAQ,GAAR,QAAQ,CAAgB;QACvB,cAAS,GAAT,SAAS,CAAiB;QAC1B,gBAAW,GAAX,WAAW,CAAmB;QAC9B,mBAAc,GAAd,cAAc,CAAqB;QACnC,WAAM,GAAN,MAAM,CAAQ;QACd,WAAM,GAAN,MAAM,CAAQ;QACd,SAAI,GAAJ,IAAI,CAAa;QACjB,cAAS,GAAT,SAAS,CAAkB;QAnB9B,gBAAW,GAAG,CAAC,CAAC;QAChB,cAAS,GAAG,CAAC,CAAC;QACd,kBAAa,GAAG,CAAC,CAAC;QAClB,eAAU,GAAG,CAAC,CAAC;QACf,iBAAY,GAAG,CAAC,CAAC;QACjB,aAAQ,GAAQ,EAAE,CAAC;QAgBxB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC;QAC9C,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC,kBAAkB,CAAC,CAAC;QAChF,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;QACvB,IAAI,CAAC,SAAS,GAAG;YACf,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE;SAC1B,CAAC;QACF,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;YAClC,IAAI,EAAE,CAAC,KAAG,IAAI,CAAC,QAAQ,CAAC,IAAM,EAAE,kEAAU,CAAC,QAAQ,CAAC;YACpD,OAAO,EAAE,CAAC,EAAE,EAAE,kEAAU,CAAC,QAAQ,CAAC;YAClC,KAAK,EAAE,CAAC,KAAG,IAAI,CAAC,QAAQ,CAAC,KAAO,EAAE,kEAAU,CAAC,QAAQ,CAAC;YACtD,UAAU,EAAE,CAAC,EAAE,CAAC;YAChB,OAAO,EAAE,CAAC,CAAC,EAAE,kEAAU,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC;YAC1D,cAAc,EAAE,CAAC,MAAM,CAAC;YACxB,OAAO,EAAE,EAAE;SACZ,CAAC,CAAC;QACH,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;IAC5B,CAAC;IAED,qCAAiB,GAAjB;QAAA,iBAaC;QAZC,IAAI,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;QAChD,KAAK,CAAC,YAAY,CAAC,UAAC,IAAI;YACtB,EAAE,CAAC,CAAC,IAAI,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;gBACzB,KAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBAC1D,KAAI,CAAC,SAAS,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;gBAC9B,KAAI,CAAC,SAAS,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;gBAC9B,KAAI,CAAC,aAAa,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;gBAC7C,KAAI,CAAC,SAAS,CAAC,gBAAgB,GAAG,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC;gBACvD,KAAI,CAAC,eAAe,EAAE,CAAC;YACzB,CAAC;QACH,CAAC,CAAC,CAAC;QACH,KAAK,CAAC,OAAO,EAAE,CAAC;IAClB,CAAC;IAED,mCAAe,GAAf;QACE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;QACtC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,UAAU,CAAC;QACrC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;QACpC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;QAChC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;IAC1C,CAAC;IAED,oCAAgB,GAAhB;QACE,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QACzB,IAAI,CAAC,eAAe,EAAE,CAAC;IACzB,CAAC;IAED,iCAAa,GAAb,UAAc,YAAsB;QAApC,iBA4BC;QA3BC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,UAAU,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,UAAU,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;YAChF,MAAM,CAAC;QACT,CAAC;QACD,IAAI,IAAI,GAAG;YACT,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,UAAU;YACrC,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;SAC/B,CAAC;QACF,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,UAAC,IAAI;YACpD,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;gBAClB,KAAI,CAAC,aAAa,GAAG,IAAI,CAAC;gBAC1B,EAAE,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;oBAClB,IAAI,GAAG,GAAG,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC,uBAAuB,CAAC,CAAC;oBAC1D,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,IAAI,GAAG,CAAC,CAAC,CAAC;wBACrB,GAAG,GAAG,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC,qBAAqB,CAAC,CAAC;oBACtD,CAAC;oBACD,KAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC,CAAC;gBACpE,CAAC;YACH,CAAC;YACD,IAAI,CAAC,CAAC;gBACJ,EAAE,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;oBAClB,KAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC,qBAAqB,CAAC,EAAE,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC,CAAC;gBAC1G,CAAC;gBACD,KAAI,CAAC,aAAa,GAAG,IAAI,CAAC,SAAS,CAAC;gBACpC,KAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC;gBACxC,KAAI,CAAC,SAAS,GAAG,KAAI,CAAC,aAAa,GAAG,KAAI,CAAC,aAAa,CAAC;YAC3D,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED;;OAEG;IACH,kCAAc,GAAd;QAAA,iBAmCC;QAlCC,IAAI,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;QACxC,OAAO,CAAC,OAAO,EAAE,CAAC;QAClB,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,UAAC,QAAQ;YACxD,IAAI,IAAI,GAAG,QAAQ,CAAC,IAAI,EAAE,EACxB,KAAK,GAAG,IAAI,EACZ,KAAK,GAAG,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC,mBAAmB,CAAC,EACnD,OAAO,GAAG,EAAE,CAAC;YACf,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;gBACjB,KAAK,GAAG,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC;gBAChD,OAAO,GAAG,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC,oBAAoB,CAAC,CAAC;gBACvD,KAAI,CAAC,cAAc,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACtC,CAAC;YACD,IAAI,CAAC,CAAC;gBACJ,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YACtC,CAAC;YACD,KAAK,GAAG,KAAI,CAAC,SAAS,CAAC,MAAM,CAAC;gBAC5B,KAAK,EAAE,KAAK;gBACZ,QAAQ,EAAE,OAAO;gBACjB,OAAO,EAAE,CAAC;wBACR,IAAI,EAAE,IAAI;wBACV,OAAO,EAAE,CAAC;4BACR,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;gCACjB,KAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;gCAClB,KAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;4BAC1B,CAAC;wBACH,CAAC,CAAC,CAAC,IAAI,CAAC,KAAI,CAAC;qBACd,CAAC;aACH,CAAC,CAAC;YACH,OAAO,CAAC,OAAO,EAAE,CAAC;YAClB,KAAK,CAAC,OAAO,EAAE,CAAC;QAClB,CAAC,EAAE;YACD,KAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC,qBAAqB,CAAC,EAAE,EAAE,CAAC,CAAC;YACnE,OAAO,CAAC,OAAO,EAAE,CAAC;QACpB,CAAC,CAAC,CAAC;IACL,CAAC;IAED;;OAEG;IACH,6BAAS,GAAT;QAAA,iBA8BC;QA7BC,IAAM,eAAe,GAAG;YACtB,KAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC,oBAAoB,CAAC,EAAE,EAAE,CAAC,CAAC;QACpE,CAAC;QACD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;YACf,2BAA2B,EAAE,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC,gBAAgB;YAC3E,wBAAwB,EAAE,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC,gBAAgB;SACzE,CAAC,CAAC,IAAI,CAAC;YACN,kGAAkG;YAClG,uDAAuD;YACvD,IAAI,GAAG,GAAG,0BAA0B,CAAC;YACrC,EAAE,CAAC,CAAC,KAAI,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC,iBAAiB,CAAC,CAAC,CAAC;gBACpD,GAAG,GAAG,6BAA6B,CAAC;YACtC,CAAC;YACD,KAAI,CAAC,MAAM,CAAC,eAAe,CAAC,GAAG,EAAE,IAAI,iFAAmB,CAAC,EAGxD,CAAC,CAAC,CAAC,IAAI,CAAC;gBACP,IAAI,OAAO,GAAG,IAAI,2EAAa,CAAC,MAAG,KAAI,CAAC,SAAS,EAAE,GAAG,KAAI,CAAC,aAAa,CAAE,EAAE,KAAI,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC,eAAe,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;gBAC5I,KAAI,CAAC,MAAM,CAAC,qBAAqB,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,cAAI;oBAClD,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,KAAK,IAAI,UAAU,CAAC,CAAC,CAAC;wBACvD,KAAI,CAAC,SAAS,CAAC,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC;wBAC5C,KAAI,CAAC,cAAc,EAAE,CAAC;oBACxB,CAAC;oBACD,IAAI,CAAC,CAAC;wBACJ,eAAe,EAAE,CAAC;oBACpB,CAAC;gBACH,CAAC,EAAE,eAAe,CAAC,CAAC;YACtB,CAAC,EAAE,eAAe,CAAC,CAAC;QACtB,CAAC,EAAE,eAAe,CAAC,CAAC;IACtB,CAAC;IAED;;OAEG;IACH,6BAAS,GAAT;QAAA,iBAmBC;QAlBC,IAAI,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC;QACrD,KAAK,CAAC,YAAY,CAAC,UAAC,IAAI;YACtB,EAAE,CAAC,CAAC,IAAI,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;gBACxB,IAAI,SAAO,GAAG,KAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;gBACxC,SAAO,CAAC,OAAO,EAAE,CAAC;gBAClB,KAAI,CAAC,MAAM,CAAC,eAAe,CAAC,IAAI,CAAC;qBAC9B,IAAI,CAAC,eAAK;oBACT,SAAO,CAAC,OAAO,EAAE,CAAC;oBAClB,KAAI,CAAC,SAAS,CAAC,YAAY,GAAG,KAAK,CAAC,EAAE,CAAC;oBACvC,KAAI,CAAC,cAAc,EAAE,CAAC;gBACxB,CAAC,CAAC;qBACD,KAAK,CAAC,eAAK;oBACV,SAAO,CAAC,OAAO,EAAE,CAAC;oBAClB,KAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC,qBAAqB,CAAC,EAAE,EAAE,CAAC,CAAC;gBACrE,CAAC,CAAC,CAAC;YACP,CAAC;QACH,CAAC,CAAC,CAAC;QACH,KAAK,CAAC,OAAO,EAAE,CAAC;IAClB,CAAC;IAED;;;OAGG;IACH,8BAAU,GAAV;QACE,IAAI,CAAC,SAAS,CAAC,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC;QAChD,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,KAAK,CAAC;QAClD,IAAI,CAAC,SAAS,CAAC,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,OAAO,CAAC;QACtD,IAAI,CAAC,SAAS,CAAC,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,OAAO,CAAC;QACtD,IAAI,CAAC,SAAS,CAAC,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,UAAU,CAAC;QACtD,IAAI,CAAC,SAAS,CAAC,cAAc,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,cAAc,CAAC;QACpE,IAAI,CAAC,SAAS,CAAC,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC;QAC/D,IAAI,CAAC,SAAS,CAAC,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC,EAAE,CAAC;QAC9D,IAAI,CAAC,SAAS,CAAC,aAAa,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,aAAa,CAAC;QAC7E,IAAI,CAAC,SAAS,CAAC,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,OAAO,CAAC;QACtD,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,cAAc,IAAI,MAAM,CAAC,CAAC,CAAC;YAC5C,IAAI,CAAC,cAAc,EAAE,CAAC;QACxB,CAAC;QACD,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,cAAc,IAAI,QAAQ,CAAC,CAAC,CAAC;YAC9C,IAAI,CAAC,SAAS,EAAE,CAAC;QACnB,CAAC;QACD,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,cAAc,IAAI,QAAQ,CAAC,CAAC,CAAC;YAC9C,IAAI,CAAC,SAAS,EAAE,CAAC;QACnB,CAAC;IACH,CAAC;IAED,8BAAU,GAAV;QACE,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;IAC1B,CAAC;IAED,gCAAY,GAAZ;QACE,IAAI,MAAM,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,OAAO,CAAC,UAAC,IAAI;YAChC,MAAM,GAAG,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QACpD,CAAC,CAAC,CAAC;QACH,MAAM,CAAC,MAAM,CAAC;IAChB,CAAC;IAED,6BAAS,GAAT;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;YACvB,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC;QAC5B,CAAC;QACD,MAAM,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC;IAC7B,CAAC;IAED,2BAAO,GAAP;QACE,IAAI,MAAM,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,OAAO,CAAC,UAAC,IAAI;YAChC,MAAM,GAAG,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,GAAG,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC;QACnF,CAAC,CAAC,CAAC;QACH,MAAM,CAAC,MAAM,CAAC;IAChB,CAAC;IAED,+BAAW,GAAX;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC,YAAY,CAAC,CAAC,CAAC;YAC/C,MAAM,CAAC,IAAI,CAAC,SAAS,EAAE,GAAG,IAAI,CAAC,aAAa,CAAC;QAC/C,CAAC;QACD,IAAI,CAAC,CAAC;YACJ,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC,SAAS,EAAE,GAAG,IAAI,CAAC,aAAa,CAAC;QAChE,CAAC;IACH,CAAC;IAED,6BAAS,GAAT;QACE,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,KAAK,CAAC;QAC7D,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;YACzC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC;YACrC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QACjE,CAAC;IACH,CAAC;IA/QU,SAAS;QAHrB,gEAAS,CAAC;WACgB;SAC1B,CAAC;sFAe2B;YACL,mEAAU;YACb,sEAAW;YACT,sEAAe;YACjB,sEAAc;YACZ,wEAAe;YACb,4FAAiB;YACd,qEAAmB;YAC3B,oEAAM;YACN,2EAAM;YACR,6EAAW;YACN,MAAgB;OAzB1B,SAAS,CAgRrB;IAAD,CAAC;AAAA;SAhRY,SAAS,e","file":"5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { IonicPageModule } from 'ionic-angular';\r\nimport { OrderPage } from './order';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { Stripe } from '@ionic-native/stripe';\r\nimport { PayPal } from '@ionic-native/paypal';\r\nimport { EcurrencyPipeModule } from '../../../pipes/ecurrency.module';\r\n\r\n@NgModule({\r\n\tdeclarations: [\r\n\t\tOrderPage\r\n\t],\r\n\timports: [\r\n\t\tIonicPageModule.forChild(OrderPage),\r\n\t\tEcurrencyPipeModule,\r\n\t\tTranslateModule.forChild()\r\n\t],\r\n\tproviders: [\r\n\t\tStripe,\r\n\t\tPayPal\r\n\t]\r\n})\r\nexport class OrderPageModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/ordering/order/order.module.ts","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { Injectable } from '@angular/core';\nimport { Plugin, Cordova, IonicNativePlugin } from '@ionic-native/core';\n/**\n * @name Stripe\n * @description\n * A plugin that allows you to use Stripe's Native SDKs for Android and iOS.\n *\n * @usage\n * ```typescript\n * import { Stripe } from '@ionic-native/stripe';\n *\n * constructor(private stripe: Stripe) { }\n *\n * ...\n *\n * this.stripe.setPublishableKey('my_publishable_key');\n *\n * let card = {\n *  number: '4242424242424242',\n *  expMonth: 12,\n *  expYear: 2020,\n *  cvc: '220'\n * };\n *\n * this.stripe.createCardToken(card)\n *    .then(token => console.log(token.id))\n *    .catch(error => console.error(error));\n *\n * ```\n *\n * @interfaces\n * StripeCardTokenParams\n */\nvar Stripe = (function (_super) {\n    __extends(Stripe, _super);\n    function Stripe() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Set publishable key\n     * @param publishableKey {string} Publishable key\n     * @return {Promise<void>}\n     */\n    Stripe.prototype.setPublishableKey = function (publishableKey) { return; };\n    /**\n     * Create Credit Card Token\n     * @param params {StripeCardTokenParams} Credit card information\n     * @return {Promise<StripeCardTokenRes>} returns a promise that resolves with the token object, or rejects with an error\n     */\n    Stripe.prototype.createCardToken = function (params) { return; };\n    /**\n     * Create a bank account token\n     * @param params {StripeBankAccountParams} Bank account information\n     * @return {Promise<string>} returns a promise that resolves with the token, or rejects with an error\n     */\n    Stripe.prototype.createBankAccountToken = function (params) { return; };\n    /**\n     * Validates a credit card number\n     * @param cardNumber {string} Credit card number\n     * @return {Promise<any>} returns a promise that resolves if the number is valid, and rejects if it's invalid\n     */\n    Stripe.prototype.validateCardNumber = function (cardNumber) { return; };\n    /**\n     * Validates a CVC number\n     * @param cvc {string} CVC number\n     * @return {Promise<any>} returns a promise that resolves if the number is valid, and rejects if it's invalid\n     */\n    Stripe.prototype.validateCVC = function (cvc) { return; };\n    /**\n     * Validates an expiry date\n     * @param expMonth {string} expiry month\n     * @param expYear {string} expiry year\n     * @return {Promise<any>} returns a promise that resolves if the date is valid, and rejects if it's invalid\n     */\n    Stripe.prototype.validateExpiryDate = function (expMonth, expYear) { return; };\n    /**\n     * Get a card type from card number\n     * @param cardNumber {string} Card number\n     * @return {Promise<string>} returns a promise that resolves with the credit card type\n     */\n    Stripe.prototype.getCardType = function (cardNumber) { return; };\n    Stripe.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    Stripe.ctorParameters = function () { return []; };\n    __decorate([\n        Cordova(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String]),\n        __metadata(\"design:returntype\", Promise)\n    ], Stripe.prototype, \"setPublishableKey\", null);\n    __decorate([\n        Cordova(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", Promise)\n    ], Stripe.prototype, \"createCardToken\", null);\n    __decorate([\n        Cordova(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", Promise)\n    ], Stripe.prototype, \"createBankAccountToken\", null);\n    __decorate([\n        Cordova(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String]),\n        __metadata(\"design:returntype\", Promise)\n    ], Stripe.prototype, \"validateCardNumber\", null);\n    __decorate([\n        Cordova(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String]),\n        __metadata(\"design:returntype\", Promise)\n    ], Stripe.prototype, \"validateCVC\", null);\n    __decorate([\n        Cordova(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String, String]),\n        __metadata(\"design:returntype\", Promise)\n    ], Stripe.prototype, \"validateExpiryDate\", null);\n    __decorate([\n        Cordova(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String]),\n        __metadata(\"design:returntype\", Promise)\n    ], Stripe.prototype, \"getCardType\", null);\n    Stripe = __decorate([\n        Plugin({\n            pluginName: 'Stripe',\n            plugin: 'cordova-plugin-stripe',\n            pluginRef: 'cordova.plugins.stripe',\n            repo: 'https://github.com/zyramedia/cordova-plugin-stripe',\n            platforms: ['Android', 'Browser', 'iOS']\n        })\n    ], Stripe);\n    return Stripe;\n}(IonicNativePlugin));\nexport { Stripe };\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ionic-native/stripe/index.js\n// module id = 834\n// module chunks = 5","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { Injectable } from '@angular/core';\nimport { Plugin, Cordova, IonicNativePlugin } from '@ionic-native/core';\n/**\n * @name PayPal\n * @description\n * PayPal plugin for Cordova/Ionic Applications\n *\n * @usage\n * ```typescript\n * import { PayPal, PayPalPayment, PayPalConfiguration } from '@ionic-native/paypal';\n *\n * constructor(private payPal: PayPal) { }\n *\n * ...\n *\n *\n * this.payPal.init({\n *   PayPalEnvironmentProduction: 'YOUR_PRODUCTION_CLIENT_ID',\n *   PayPalEnvironmentSandbox: 'YOUR_SANDBOX_CLIENT_ID'\n * }).then(() => {\n *   // Environments: PayPalEnvironmentNoNetwork, PayPalEnvironmentSandbox, PayPalEnvironmentProduction\n *   this.payPal.prepareToRender('PayPalEnvironmentSandbox', new PayPalConfiguration({\n *     // Only needed if you get an \"Internal Service Error\" after PayPal login!\n *     //payPalShippingAddressOption: 2 // PayPalShippingAddressOptionPayPal\n *   })).then(() => {\n *     let payment = new PayPalPayment('3.33', 'USD', 'Description', 'sale');\n *     this.payPal.renderSinglePaymentUI(payment).then(() => {\n *       // Successfully paid\n *\n *       // Example sandbox response\n *       //\n *       // {\n *       //   \"client\": {\n *       //     \"environment\": \"sandbox\",\n *       //     \"product_name\": \"PayPal iOS SDK\",\n *       //     \"paypal_sdk_version\": \"2.16.0\",\n *       //     \"platform\": \"iOS\"\n *       //   },\n *       //   \"response_type\": \"payment\",\n *       //   \"response\": {\n *       //     \"id\": \"PAY-1AB23456CD789012EF34GHIJ\",\n *       //     \"state\": \"approved\",\n *       //     \"create_time\": \"2016-10-03T13:33:33Z\",\n *       //     \"intent\": \"sale\"\n *       //   }\n *       // }\n *     }, () => {\n *       // Error or render dialog closed without being successful\n *     });\n *   }, () => {\n *     // Error in configuration\n *   });\n * }, () => {\n *   // Error in initialization, maybe PayPal isn't supported or something else\n * });\n * ```\n * @interfaces\n * PayPalEnvironment\n * PayPalConfigurationOptions\n * @classes\n * PayPalPayment\n * PayPalItem\n * PayPalPaymentDetails\n * PayPalShippingAddress\n */\nvar PayPal = (function (_super) {\n    __extends(PayPal, _super);\n    function PayPal() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Retrieve the version of the PayPal iOS SDK library. Useful when contacting support.\n     * @returns {Promise<string>}\n     */\n    PayPal.prototype.version = function () { return; };\n    /**\n     * You must preconnect to PayPal to prepare the device for processing payments.\n     * This improves the user experience, by making the presentation of the\n     * UI faster. The preconnect is valid for a limited time, so\n     * the recommended time to preconnect is on page load.\n     *\n     * @param {PayPalEnvironment} clientIdsForEnvironments: set of client ids for environments\n     * @returns {Promise<any>}\n     */\n    PayPal.prototype.init = function (clientIdsForEnvironments) { return; };\n    /**\n     * You must preconnect to PayPal to prepare the device for processing payments.\n     * This improves the user experience, by making the presentation of the UI faster.\n     * The preconnect is valid for a limited time, so the recommended time to preconnect is on page load.\n     *\n     * @param {String} environment: available options are \"PayPalEnvironmentNoNetwork\", \"PayPalEnvironmentProduction\" and \"PayPalEnvironmentSandbox\"\n     * @param {PayPalConfiguration} configuration: PayPalConfiguration object, for Future Payments merchantName, merchantPrivacyPolicyURL and merchantUserAgreementURL must be set be set\n     * @returns {Promise<any>}\n     */\n    PayPal.prototype.prepareToRender = function (environment, configuration) { return; };\n    /**\n     * Start PayPal UI to collect payment from the user.\n     * See https://developer.paypal.com/webapps/developer/docs/integration/mobile/ios-integration-guide/\n     * for more documentation of the params.\n     *\n     * @param {PayPalPayment} payment PayPalPayment object\n     * @returns {Promise<any>}\n     */\n    PayPal.prototype.renderSinglePaymentUI = function (payment) { return; };\n    /**\n     * Once a user has consented to future payments, when the user subsequently initiates a PayPal payment\n     * from their device to be completed by your server, PayPal uses a Correlation ID to verify that the\n     * payment is originating from a valid, user-consented device+application.\n     * This helps reduce fraud and decrease declines.\n     * This method MUST be called prior to initiating a pre-consented payment (a \"future payment\") from a mobile device.\n     * Pass the result to your server, to include in the payment request sent to PayPal.\n     * Do not otherwise cache or store this value.\n     * @returns {Promise<any>}\n     */\n    PayPal.prototype.clientMetadataID = function () { return; };\n    /**\n     * Please Read Docs on Future Payments at https://github.com/paypal/PayPal-iOS-SDK#future-payments\n     * @returns {Promise<any>}\n     */\n    PayPal.prototype.renderFuturePaymentUI = function () { return; };\n    /**\n     * Please Read Docs on Profile Sharing at https://github.com/paypal/PayPal-iOS-SDK#profile-sharing\n     *\n     * @param {Array<string>} scopes scopes Set of requested scope-values. Accepted scopes are: openid, profile, address, email, phone, futurepayments and paypalattributes\n     * See https://developer.paypal.com/docs/integration/direct/identity/attributes/ for more details\n     * @returns {Promise<any>}\n     */\n    PayPal.prototype.renderProfileSharingUI = function (scopes) { return; };\n    PayPal.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    PayPal.ctorParameters = function () { return []; };\n    __decorate([\n        Cordova(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Promise)\n    ], PayPal.prototype, \"version\", null);\n    __decorate([\n        Cordova(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", Promise)\n    ], PayPal.prototype, \"init\", null);\n    __decorate([\n        Cordova(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String, PayPalConfiguration]),\n        __metadata(\"design:returntype\", Promise)\n    ], PayPal.prototype, \"prepareToRender\", null);\n    __decorate([\n        Cordova(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [PayPalPayment]),\n        __metadata(\"design:returntype\", Promise)\n    ], PayPal.prototype, \"renderSinglePaymentUI\", null);\n    __decorate([\n        Cordova(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Promise)\n    ], PayPal.prototype, \"clientMetadataID\", null);\n    __decorate([\n        Cordova(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Promise)\n    ], PayPal.prototype, \"renderFuturePaymentUI\", null);\n    __decorate([\n        Cordova(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Array]),\n        __metadata(\"design:returntype\", Promise)\n    ], PayPal.prototype, \"renderProfileSharingUI\", null);\n    PayPal = __decorate([\n        Plugin({\n            pluginName: 'PayPal',\n            plugin: 'com.paypal.cordova.mobilesdk',\n            pluginRef: 'PayPalMobile',\n            repo: 'https://github.com/paypal/PayPal-Cordova-Plugin',\n            platforms: ['Android', 'iOS']\n        })\n    ], PayPal);\n    return PayPal;\n}(IonicNativePlugin));\nexport { PayPal };\n/**\n * @hidden\n */\nvar PayPalPayment = (function () {\n    function PayPalPayment(amount, currency, shortDescription, intent, details) {\n        /**\n         * Optional Build Notation code (\"BN code\"), obtained from partnerprogram@paypal.com,\n         * for your tracking purposes.\n         */\n        this.bnCode = 'PhoneGap_SP';\n        this.amount = amount;\n        this.currency = currency;\n        this.shortDescription = shortDescription;\n        this.intent = intent;\n        this.details = details;\n    }\n    return PayPalPayment;\n}());\nexport { PayPalPayment };\n/**\n * @hidden\n */\nvar PayPalItem = (function () {\n    /**\n     * The PayPalItem class defines an optional itemization for a payment.\n     * @see https://developer.paypal.com/docs/api/#item-object for more details.\n     * @param {String} name: Name of the item. 127 characters max\n     * @param {Number} quantity: Number of units. 10 characters max.\n     * @param {String} price: Unit price for this item 10 characters max.\n     * May be negative for \"coupon\" etc\n     * @param {String} currency: ISO standard currency code.\n     * @param {String} sku: The stock keeping unit for this item. 50 characters max (optional)\n     */\n    function PayPalItem(name, quantity, price, currency, sku) {\n        this.name = name;\n        this.quantity = quantity;\n        this.price = price;\n        this.currency = currency;\n        this.sku = sku;\n    }\n    return PayPalItem;\n}());\nexport { PayPalItem };\n/**\n * @hidden\n */\nvar PayPalPaymentDetails = (function () {\n    /**\n     * The PayPalPaymentDetails class defines optional amount details.\n     * @param {String} subtotal: Sub-total (amount) of items being paid for. 10 characters max with support for 2 decimal places.\n     * @param {String} shipping: Amount charged for shipping. 10 characters max with support for 2 decimal places.\n     * @param {String} tax: Amount charged for tax. 10 characters max with support for 2 decimal places.\n     */\n    function PayPalPaymentDetails(subtotal, shipping, tax) {\n        this.subtotal = subtotal;\n        this.shipping = shipping;\n        this.tax = tax;\n    }\n    return PayPalPaymentDetails;\n}());\nexport { PayPalPaymentDetails };\n/**\n * @hidden\n */\nvar PayPalConfiguration = (function () {\n    /**\n     * You use a PayPalConfiguration object to configure many aspects of how the SDK behaves.\n     * see defaults for options available\n     */\n    function PayPalConfiguration(options) {\n        var defaults = {\n            defaultUserEmail: null,\n            defaultUserPhoneCountryCode: null,\n            defaultUserPhoneNumber: null,\n            merchantName: null,\n            merchantPrivacyPolicyURL: null,\n            merchantUserAgreementURL: null,\n            acceptCreditCards: true,\n            payPalShippingAddressOption: 0,\n            rememberUser: true,\n            languageOrLocale: null,\n            disableBlurWhenBackgrounding: false,\n            presentingInPopover: false,\n            forceDefaultsInSandbox: false,\n            sandboxUserPassword: null,\n            sandboxUserPin: null\n        };\n        if (options && typeof options === 'object') {\n            for (var i in options) {\n                if (defaults.hasOwnProperty(i)) {\n                    defaults[i] = options[i];\n                }\n            }\n        }\n        return defaults;\n    }\n    return PayPalConfiguration;\n}());\nexport { PayPalConfiguration };\n/**\n * @hidden\n */\nvar PayPalShippingAddress = (function () {\n    /**\n     * See the documentation of the individual properties for more detail.\n     * @param {String} recipientName: Name of the recipient at this address. 50 characters max.\n     * @param {String} line1: Line 1 of the address (e.g., Number, street, etc). 100 characters max.\n     * @param {String} line2: Line 2 of the address (e.g., Suite, apt #, etc). 100 characters max. Optional.\n     * @param {String} city: City name. 50 characters max.\n     * @param {String} state: 2-letter code for US states, and the equivalent for other countries. 100 characters max. Required in certain countries.\n     * @param {String} postalCode: ZIP code or equivalent is usually required for countries that have them. 20 characters max. Required in certain countries.\n     * @param {String} countryCode: 2-letter country code. 2 characters max.\n     */\n    function PayPalShippingAddress(recipientName, line1, line2, city, state, postalCode, countryCode) {\n        this.recipientName = recipientName;\n        this.line1 = line1;\n        this.line2 = line2;\n        this.city = city;\n        this.state = state;\n        this.postalCode = postalCode;\n        this.countryCode = countryCode;\n    }\n    return PayPalShippingAddress;\n}());\nexport { PayPalShippingAddress };\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ionic-native/paypal/index.js\n// module id = 835\n// module chunks = 5","import {Component} from '@angular/core';\nimport {CartService} from '../../../services/cart_service';\nimport {APIService} from \"../../../services/api_service\";\nimport {OrderHistoryService} from \"../../../services/order_history_service\";\nimport {FormBuilder, Validators} from \"@angular/forms\";\nimport {IonicPage, AlertController, ViewController, LoadingController, ModalController} from 'ionic-angular';\nimport {Stripe} from '@ionic-native/stripe';\nimport {PayPal, PayPalPayment, PayPalConfiguration} from '@ionic-native/paypal';\nimport {TranslateService} from '@ngx-translate/core';\nimport {UtilService} from '../../../services/util_service';\n\n/**\n * Make an order page component\n */\n@IonicPage()\n@Component({\n  templateUrl: 'order.html'\n})\nexport class OrderPage {\n  public orderData;\n  public orderForm;\n  public formReady: boolean;\n  public deliveryPrice;\n  public discountPrice;\n  public cTotalPrice = 0;\n  public cTaxPrice = 0;\n  public cPriceWithTax = 0;\n  public cFullPrice = 0;\n  public cLoyaltyUsed = 0;\n  public userData: any = {};\n\n  constructor(\n    private cart: CartService,\n    private apiService: APIService,\n    private builder: FormBuilder,\n    private alertCtrl: AlertController,\n    public viewCtrl: ViewController,\n    private modalCtrl: ModalController,\n    private loadingCtrl: LoadingController,\n    private historyService: OrderHistoryService,\n    private stripe: Stripe,\n    private payPal: PayPal,\n    private util: UtilService,\n    private translate: TranslateService\n  ) {\n    this.userData = this.apiService.getUserData();\n    this.stripe.setPublishableKey(this.apiService.getSettings().stripe_publishable);\n    this.deliveryPrice = 0;\n    this.orderData = {\n      products: cart.getItems()\n    };\n    this.orderForm = this.builder.group({\n      name: [`${this.userData.name}`, Validators.required],\n      address: ['', Validators.required],\n      phone: [`${this.userData.phone}`, Validators.required],\n      promo_code: [''],\n      loyalty: [0, Validators.max(this.userData.loyalty_reward)],\n      payment_method: ['cash'],\n      comment: ''\n    });\n    this.formReady = true;\n    this.discountPrice = null;\n  }\n\n  showAddressWindow() {\n    let modal = this.modalCtrl.create('AddressMap');\n    modal.onDidDismiss((data) => {\n      if (data && data.address) {\n        this.orderForm.controls['address'].setValue(data.address);\n        this.orderData.lat = data.lat;\n        this.orderData.lng = data.lng;\n        this.deliveryPrice = data.service_area.price;\n        this.orderData.delivery_area_id = data.service_area.id;\n        this.calculatePrices();\n      }\n    });\n    modal.present();\n  }\n\n  calculatePrices() {\n    this.cFullPrice = this.getFullPrice();\n    this.discountPrice = this.cFullPrice;\n    this.cTotalPrice = this.cartPrice();\n    this.cTaxPrice = this.cartTax();\n    this.cPriceWithTax = this.cartWithTax();\n  }\n\n  ionViewWillEnter() {\n    this.validatePromo(true);\n    this.calculatePrices();\n  }\n\n  validatePromo(supressAlert?: boolean) {\n    if (!this.orderForm.value.promo_code || (this.orderForm.value.promo_code == '')) {\n      return;\n    }\n    let data = {\n      code: this.orderForm.value.promo_code,\n      products: this.cart.getItems()\n    };\n    this.apiService.validateDiscount(data).subscribe((data) => {\n      if (!data.success) {\n        this.discountPrice = null;\n        if (!supressAlert) {\n          let msg = this.translate.instant('order.promo_not_found');\n          if (data.code == 400) {\n            msg = this.translate.instant('order.promo_invalid');\n          }\n          this.util.alert(msg, this.translate.instant('order.error_title'));\n        }\n      }\n      else {\n        if (!supressAlert) {\n          this.util.alert(this.translate.instant('order.promo_applied'), this.translate.instant('order.success'));\n        }\n        this.discountPrice = data.new_price;\n        this.cPriceWithTax = data.new_price_tax;\n        this.cTaxPrice = this.cPriceWithTax - this.discountPrice;\n      }\n    });\n  }\n\n  /**\n   * Actual submission of order data to server\n   */\n  realPlaceOrder() {\n    let loading = this.loadingCtrl.create();\n    loading.present();\n    this.apiService.createOrder(this.orderData).then((response) => {\n      let data = response.json(),\n        alert = null,\n        title = this.translate.instant('order.error_title'),\n        message = '';\n      if (data.success) {\n        title = this.translate.instant('order.success');\n        message = this.translate.instant('order.order_placed');\n        this.historyService.add(data.order);\n      }\n      else {\n        message = data.errors.join(\"<br/>\");\n      }\n      alert = this.alertCtrl.create({\n        title: title,\n        subTitle: message,\n        buttons: [{\n          text: 'OK',\n          handler: (() => {\n            if (data.success) {\n              this.cart.clear();\n              this.viewCtrl.dismiss();\n            }\n          }).bind(this)\n        }]\n      });\n      loading.dismiss();\n      alert.present();\n    }, () => {\n      this.util.alert(this.translate.instant('order.general_error'), '');\n      loading.dismiss();\n    });\n  }\n\n  /**\n   * Call PayPal dialog, create a transaction than place an order\n   */\n  payPayPal() {\n    const showPayPalError = () => {\n      this.util.alert(this.translate.instant('order.paypal_error'), '');\n    }\n    this.payPal.init({\n      PayPalEnvironmentProduction: this.apiService.getSettings().paypal_client_id,\n      PayPalEnvironmentSandbox: this.apiService.getSettings().paypal_client_id\n    }).then(() => {\n      // Environments: PayPalEnvironmentNoNetwork, PayPalEnvironmentSandbox, PayPalEnvironmentProduction\n      // change environment here to start payments processing\n      let env = 'PayPalEnvironmentSandbox';\n      if (this.apiService.getSettings().paypal_production) {\n        env = 'PayPalEnvironmentProduction';\n      }\n      this.payPal.prepareToRender(env, new PayPalConfiguration({\n        // Only needed if you get an \"Internal Service Error\" after PayPal login!\n        //payPalShippingAddressOption: 2 // PayPalShippingAddressOptionPayPal\n      })).then(() => {\n        let payment = new PayPalPayment(`${this.cartPrice() + this.deliveryPrice}`, this.apiService.getSettings().paypal_currency, 'Order', 'sale');\n        this.payPal.renderSinglePaymentUI(payment).then(data => {\n          if (data.response && data.response.state == 'approved') {\n            this.orderData.paypal_id = data.response.id;\n            this.realPlaceOrder();\n          }\n          else {\n            showPayPalError();\n          }\n        }, showPayPalError);\n      }, showPayPalError);\n    }, showPayPalError);\n  }\n\n  /**\n   * Call PayPal dialog, get the card token than place an order\n   */\n  payStripe() {\n    let modal = this.modalCtrl.create('CreditCardInput');\n    modal.onDidDismiss((data) => {\n      if (data && data.number) {\n        let loading = this.loadingCtrl.create();\n        loading.present();\n        this.stripe.createCardToken(data)\n          .then(token => {\n            loading.dismiss();\n            this.orderData.stripe_token = token.id;\n            this.realPlaceOrder();\n          })\n          .catch(error => {\n            loading.dismiss();\n            this.util.alert(this.translate.instant('order.payment_error'), '');\n          });\n      }\n    });\n    modal.present();\n  }\n\n  /**\n   * Basic order form submission handler\n   * will call corresponding payment method handler\n   */\n  placeOrder() {\n    this.orderData.name = this.orderForm.value.name;\n    this.orderData.phone = this.orderForm.value.phone;\n    this.orderData.address = this.orderForm.value.address;\n    this.orderData.loyalty = this.orderForm.value.loyalty;\n    this.orderData.code = this.orderForm.value.promo_code;\n    this.orderData.payment_method = this.orderForm.value.payment_method;\n    this.orderData.city_id = this.apiService.getUserData().city_id;\n    this.orderData.customer_id = this.apiService.getUserData().id;\n    this.orderData.restaurant_id = this.cart.getItems()[0].product.restaurant_id;\n    this.orderData.comment = this.orderForm.value.comment;\n    if (this.orderData.payment_method == 'cash') {\n      this.realPlaceOrder();\n    }\n    if (this.orderData.payment_method == 'stripe') {\n      this.payStripe();\n    }\n    if (this.orderData.payment_method == 'paypal') {\n      this.payPayPal();\n    }\n  }\n\n  closeModal() {\n    this.viewCtrl.dismiss();\n  }\n\n  getFullPrice() {\n    let result = 0;\n    this.cart.getItems().forEach((item) => {\n      result = result + item.product.price * item.count;\n    });\n    return result;\n  }\n\n  cartPrice() {\n    if (this.discountPrice) {\n      return this.discountPrice;\n    }\n    return this.getFullPrice();\n  }\n\n  cartTax() {\n    let result = 0;\n    this.cart.getItems().forEach((item) => {\n      result = result + item.product.price * item.product.tax_value / 100 * item.count;\n    });\n    return result;\n  }\n\n  cartWithTax() {\n    if (this.apiService.getSettings().tax_included) {\n      return this.cartPrice() + this.deliveryPrice;\n    }\n    else {\n      return this.cartTax() + this.cartPrice() + this.deliveryPrice;\n    }\n  }\n\n  useReward() {\n    this.cLoyaltyUsed = this.orderForm.controls['loyalty'].value;\n    if (this.cLoyaltyUsed > this.cTotalPrice) {\n      this.cLoyaltyUsed = this.cTotalPrice;\n      this.orderForm.controls['loyalty'].setValue(this.cLoyaltyUsed);\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/ordering/order/order.ts"],"sourceRoot":""}