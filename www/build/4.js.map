{"version":3,"sources":["../../src/pages/personal/loyalty/loyalty.module.ts","../../node_modules/angular-svg-round-progressbar/dist/round-progress.service.js","../../node_modules/angular-svg-round-progressbar/dist/round-progress.config.js","../../node_modules/angular-svg-round-progressbar/dist/round-progress.ease.js","../../node_modules/angular-svg-round-progressbar/dist/round-progress.component.js","../../src/pages/personal/loyalty/loyalty.ts","../../node_modules/angular-svg-round-progressbar/dist/index.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAyC;AACO;AACR;AACc;AACgB;AACJ;AAalE;IAAA;IAAgC,CAAC;IAApB,iBAAiB;QAX7B,+DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,6DAAW;aACZ;YACD,OAAO,EAAE;gBACP,sEAAe,CAAC,QAAQ,CAAC,6DAAW,CAAC;gBACrC,oFAAmB;gBACnB,4EAAe,CAAC,QAAQ,EAAE;gBAC1B,kFAAmB;aACpB;SACF,CAAC;OACW,iBAAiB,CAAG;IAAD,wBAAC;CAAA;AAAH;;;;;;;;;AClBjB;AACb,8CAA8C,cAAc;AAC5D,aAAa,mBAAO,CAAC,CAAe;AACpC,yBAAyB,mBAAO,CAAC,EAA2B;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,sBAAsB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,0BAA0B;AACnC;AACA;AACA,uDAAuD;AACvD,SAAS,gCAAgC,wBAAwB,GAAG,4DAA4D,IAAI;AACpI,MAAM;AACN;AACA,CAAC;AACD;AACA;AACA,kD;;;;;;;;ACpHa;AACb,8CAA8C,cAAc;AAC5D,aAAa,mBAAO,CAAC,CAAe;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iD;;;;;;;;ACpBa;AACb,8CAA8C,cAAc;AAC5D,aAAa,mBAAO,CAAC,CAAe;AACpaAAa;AACxC;AACA;AACA;AACA;AACA,2BAA2B,aAAa;AACxC;AACA;AACA;AACA;AACA,2BAA2B,aAAa;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,0BAA0B;AACnC;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uFAAuF;AACvF,oBAAoB;AACpB;AACA;AACA;AACA,+C;;;;;;;;ACpRa;AACb,8CAA8C,cAAc;AAC5D,aAAa,mBAAO,CAAC,CAAe;AACpC,+BAA+B,mBAAO,CAAC,GAA0B;AACjE,8BAA8B,mBAAO,CAAC,GAAyB;AAC/D,4BAA4B,mBAAO,CAAC,GAAuB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,gCAAgC,uBAAuB,2BAA2B,yBAAyB,OAAO;AAClH,2CAA2C,oBAAoB,6BAA6B,OAAO;AACnG,iDAAiD,2BAA2B,oBAAoB,qBAAqB,eAAe,gBAAgB,OAAO;AAC3J;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,yDAAyD;AACzD,SAAS,uDAAuD;AAChE,SAAS,iDAAiD;AAC1D,SAAS,gCAAgC,gFAAgF,IAAI;AAC7H,SAAS,uBAAuB;AAChC,SAAS,yBAAyB;AAClC,MAAM;AACN;AACA,mBAAmB,0CAA0C;AAC7D,qBAAqB,qBAAqB;AAC1C,iBAAiB,qBAAqB;AACtC,oBAAoB,qBAAqB;AACzC,uBAAuB,qBAAqB;AAC5C,4BAA4B,qBAAqB;AACjD,sBAAsB,qBAAqB;AAC3C,oBAAoB,qBAAqB;AACzC,mBAAmB,qBAAqB;AACxC,wBAAwB,qBAAqB;AAC7C,wBAAwB,qBAAqB;AAC7C,uBAAuB,qBAAqB;AAC5C,wBAAwB,qBAAqB;AAC7C,qBAAqB,qBAAqB;AAC1C,sBAAsB,sBAAsB;AAC5C;AACA;AACA,CAAC;AACD;AACA,oD;;;;;;;;;;;;;;;;;;;;ACrMwC;AAEmB;AAE3D;;GAEG;AAMH;IAIE,qBACU,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;QAJzB,aAAQ,GAAQ,EAAE,CAAC;QACnB,aAAQ,GAAQ,EAAE,CAAC;IAK1B,CAAC;IAED,sCAAgB,GAAhB;QAAA,iBAKC;QAJC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC;QAC9C,IAAI,CAAC,UAAU,CAAC,YAAY,EAAE,CAAC,IAAI,CAAC,cAAI;YACtC,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACvB,CAAC,CAAC,CAAC;IACL,CAAC;IAdU,WAAW;QAJvB,gEAAS,CAAC;YACT,QAAQ,EAAE,SAAS;WACQ;SAC5B,CAAC;oBAMgC;OALrB,WAAW,CAevB;IAAD,CAAC;AAAA;SAfY,WAAW,e;;;;;;;;ACZX;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,aAAa,mBAAO,CAAC,CAAe;AACpC,eAAe,mBAAO,CAAC,EAAiB;AACxC,iCAAiC,mBAAO,CAAC,GAA4B;AACrE,+BAA+B,mBAAO,CAAC,GAA0B;AACjE,4BAA4B,mBAAO,CAAC,GAAuB;AAC3D,8BAA8B,mBAAO,CAAC,GAAyB;AAC/D;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,CAAC;AACD;AACA;AACA,SAAS,mBAAO,CAAC,GAA4B;AAC7C,SAAS,mBAAO,CAAC,GAA0B;AAC3C,SAAS,mBAAO,CAAC,GAAuB;AACxC,SAAS,mBAAO,CAAC,GAAyB;AAC1C,iC","file":"4.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { LoyaltyPage } from './loyalty';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { EcurrencyPipeModule } from '../../../pipes/ecurrency.module';\nimport {RoundProgressModule} from 'angular-svg-round-progressbar';\n\n@NgModule({\n  declarations: [\n    LoyaltyPage\n  ],\n  imports: [\n    IonicPageModule.forChild(LoyaltyPage),\n    EcurrencyPipeModule,\n    TranslateModule.forChild(),\n    RoundProgressModule\n  ]\n})\nexport class LoyaltyPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/personal/loyalty/loyalty.module.ts","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@angular/core\");\nvar platform_browser_1 = require(\"@angular/platform-browser\");\nvar DEGREE_IN_RADIANS = Math.PI / 180;\nvar RoundProgressService = /** @class */ (function () {\n    function RoundProgressService(document) {\n        this.supportsSvg = !!(document &&\n            document.createElementNS &&\n            document.createElementNS('http://www.w3.org/2000/svg', 'svg').createSVGRect);\n        this._base = document && document.head.querySelector('base');\n        this._hasPerf = typeof window !== 'undefined' &&\n            window.performance &&\n            window.performance.now &&\n            typeof window.performance.now() === 'number';\n    }\n    /**\n     * Resolves a SVG color against the page's `base` tag.\n     */\n    /**\n       * Resolves a SVG color against the page's `base` tag.\n       */\n    RoundProgressService.prototype.resolveColor = /**\n       * Resolves a SVG color against the page's `base` tag.\n       */\n    function (color) {\n        if (this._base && this._base.href) {\n            var hashIndex = color.indexOf('#');\n            if (hashIndex > -1 && color.indexOf('url') > -1) {\n                return color.slice(0, hashIndex) + location.href + color.slice(hashIndex);\n            }\n        }\n        return color;\n    };\n    /**\n     * Generates a timestamp.\n     */\n    /**\n       * Generates a timestamp.\n       */\n    RoundProgressService.prototype.getTimestamp = /**\n       * Generates a timestamp.\n       */\n    function () {\n        return this._hasPerf ? window.performance.now() : Date.now();\n    };\n    /**\n     * Generates the value for an SVG arc.\n     * @param current       Current value.\n     * @param total         Maximum value.\n     * @param pathRadius    Radius of the SVG path.\n     * @param elementRadius Radius of the SVG container.\n     * @param isSemicircle  Whether the element should be a semicircle.\n     */\n    /**\n       * Generates the value for an SVG arc.\n       * @param current       Current value.\n       * @param total         Maximum value.\n       * @param pathRadius    Radius of the SVG path.\n       * @param elementRadius Radius of the SVG container.\n       * @param isSemicircle  Whether the element should be a semicircle.\n       */\n    RoundProgressService.prototype.getArc = /**\n       * Generates the value for an SVG arc.\n       * @param current       Current value.\n       * @param total         Maximum value.\n       * @param pathRadius    Radius of the SVG path.\n       * @param elementRadius Radius of the SVG container.\n       * @param isSemicircle  Whether the element should be a semicircle.\n       */\n    function (current, total, pathRadius, elementRadius, isSemicircle) {\n        if (isSemicircle === void 0) { isSemicircle = false; }\n        var value = Math.max(0, Math.min(current || 0, total));\n        var maxAngle = isSemicircle ? 180 : 359.9999;\n        var percentage = total === 0 ? maxAngle : (value / total) * maxAngle;\n        var start = this._polarToCartesian(elementRadius, pathRadius, percentage);\n        var end = this._polarToCartesian(elementRadius, pathRadius, 0);\n        var arcSweep = (percentage <= 180 ? 0 : 1);\n        return \"M \" + start + \" A \" + pathRadius + \" \" + pathRadius + \" 0 \" + arcSweep + \" 0 \" + end;\n    };\n    ;\n    /**\n     * Converts polar cooradinates to Cartesian.\n     * @param elementRadius  Radius of the wrapper element.\n     * @param pathRadius     Radius of the path being described.\n     * @param angleInDegrees Degree to be converted.\n     */\n    /**\n       * Converts polar cooradinates to Cartesian.\n       * @param elementRadius  Radius of the wrapper element.\n       * @param pathRadius     Radius of the path being described.\n       * @param angleInDegrees Degree to be converted.\n       */\n    RoundProgressService.prototype._polarToCartesian = /**\n       * Converts polar cooradinates to Cartesian.\n       * @param elementRadius  Radius of the wrapper element.\n       * @param pathRadius     Radius of the path being described.\n       * @param angleInDegrees Degree to be converted.\n       */\n    function (elementRadius, pathRadius, angleInDegrees) {\n        var angleInRadians = (angleInDegrees - 90) * DEGREE_IN_RADIANS;\n        var x = elementRadius + (pathRadius * Math.cos(angleInRadians));\n        var y = elementRadius + (pathRadius * Math.sin(angleInRadians));\n        return x + ' ' + y;\n    };\n    RoundProgressService.decorators = [\n        { type: core_1.Injectable },\n    ];\n    /** @nocollapse */\n    RoundProgressService.ctorParameters = function () { return [\n        { type: undefined, decorators: [{ type: core_1.Optional }, { type: core_1.Inject, args: [platform_browser_1.DOCUMENT,] },] },\n    ]; };\n    return RoundProgressService;\n}());\nexports.RoundProgressService = RoundProgressService;\n;\n//# sourceMappingURL=round-progress.service.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/angular-svg-round-progressbar/dist/round-progress.service.js\n// module id = 830\n// module chunks = 4","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@angular/core\");\nexports.ROUND_PROGRESS_DEFAULTS = new core_1.InjectionToken('ROUND_PROGRESS_DEFAULTS');\nexports.ROUND_PROGRESS_DEFAULTS_PROVIDER = {\n    provide: exports.ROUND_PROGRESS_DEFAULTS,\n    useValue: {\n        radius: 125,\n        animation: 'easeOutCubic',\n        animationDelay: null,\n        duration: 500,\n        stroke: 15,\n        color: '#45CCCE',\n        background: '#EAEAEA',\n        responsive: false,\n        clockwise: true,\n        semicircle: false,\n        rounded: false\n    }\n};\n//# sourceMappingURL=round-progress.config.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/angular-svg-round-progressbar/dist/round-progress.config.js\n// module id = 831\n// module chunks = 4","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@angular/core\");\nvar RoundProgressEase = /** @class */ (function () {\n    function RoundProgressEase() {\n    }\n    // t: current time (or position) of the neonate. This can be seconds or frames, steps,\n    // seconds, ms, whatever – as long as the unit is the same as is used for the total time.\n    // b: beginning value of the property.\n    // c: change between the beginning and destination value of the property.\n    // d: total time of the neonate.\n    // t: current time (or position) of the neonate. This can be seconds or frames, steps,\n    // seconds, ms, whatever – as long as the unit is the same as is used for the total time.\n    // b: beginning value of the property.\n    // c: change between the beginning and destination value of the property.\n    // d: total time of the neonate.\n    RoundProgressEase.prototype.linearEase = \n    // t: current time (or position) of the neonate. This can be seconds or frames, steps,\n    // seconds, ms, whatever – as long as the unit is the same as is used for the total time.\n    // b: beginning value of the property.\n    // c: change between the beginning and destination value of the property.\n    // d: total time of the neonate.\n    function (t, b, c, d) {\n        return c * t / d + b;\n    };\n    ;\n    RoundProgressEase.prototype.easeInQuad = function (t, b, c, d) {\n        return c * (t /= d) * t + b;\n    };\n    ;\n    RoundProgressEase.prototype.easeOutQuad = function (t, b, c, d) {\n        return -c * (t /= d) * (t - 2) + b;\n    };\n    ;\n    RoundProgressEase.prototype.easeInOutQuad = function (t, b, c, d) {\n        if ((t /= d / 2) < 1) {\n            return c / 2 * t * t + b;\n        }\n        return -c / 2 * ((--t) * (t - 2) - 1) + b;\n    };\n    ;\n    RoundProgressEase.prototype.easeInCubic = function (t, b, c, d) {\n        return c * (t /= d) * t * t + b;\n    };\n    ;\n    RoundProgressEase.prototype.easeOutCubic = function (t, b, c, d) {\n        return c * ((t = t / d - 1) * t * t + 1) + b;\n    };\n    ;\n    RoundProgressEase.prototype.easeInOutCubic = function (t, b, c, d) {\n        if ((t /= d / 2) < 1) {\n            return c / 2 * t * t * t + b;\n        }\n        return c / 2 * ((t -= 2) * t * t + 2) + b;\n    };\n    ;\n    RoundProgressEase.prototype.easeInQuart = function (t, b, c, d) {\n        return c * (t /= d) * t * t * t + b;\n    };\n    ;\n    RoundProgressEase.prototype.easeOutQuart = function (t, b, c, d) {\n        return -c * ((t = t / d - 1) * t * t * t - 1) + b;\n    };\n    ;\n    RoundProgressEase.prototype.easeInOutQuart = function (t, b, c, d) {\n        if ((t /= d / 2) < 1) {\n            return c / 2 * t * t * t * t + b;\n        }\n        return -c / 2 * ((t -= 2) * t * t * t - 2) + b;\n    };\n    ;\n    RoundProgressEase.prototype.easeInQuint = function (t, b, c, d) {\n        return c * (t /= d) * t * t * t * t + b;\n    };\n    ;\n    RoundProgressEase.prototype.easeOutQuint = function (t, b, c, d) {\n        return c * ((t = t / d - 1) * t * t * t * t + 1) + b;\n    };\n    ;\n    RoundProgressEase.prototype.easeInOutQuint = function (t, b, c, d) {\n        if ((t /= d / 2) < 1) {\n            return c / 2 * t * t * t * t * t + b;\n        }\n        return c / 2 * ((t -= 2) * t * t * t * t + 2) + b;\n    };\n    ;\n    RoundProgressEase.prototype.easeInSine = function (t, b, c, d) {\n        return -c * Math.cos(t / d * (Math.PI / 2)) + c + b;\n    };\n    ;\n    RoundProgressEase.prototype.easeOutSine = function (t, b, c, d) {\n        return c * Math.sin(t / d * (Math.PI / 2)) + b;\n    };\n    ;\n    RoundProgressEase.prototype.easeInOutSine = function (t, b, c, d) {\n        return -c / 2 * (Math.cos(Math.PI * t / d) - 1) + b;\n    };\n    ;\n    RoundProgressEase.prototype.easeInExpo = function (t, b, c, d) {\n        return (t == 0) ? b : c * Math.pow(2, 10 * (t / d - 1)) + b;\n    };\n    ;\n    RoundProgressEase.prototype.easeOutExpo = function (t, b, c, d) {\n        return (t == d) ? b + c : c * (-Math.pow(2, -10 * t / d) + 1) + b;\n    };\n    ;\n    RoundProgressEase.prototype.easeInOutExpo = function (t, b, c, d) {\n        if (t == 0) {\n            return b;\n        }\n        ;\n        if (t == d) {\n            return b + c;\n        }\n        if ((t /= d / 2) < 1) {\n            return c / 2 * Math.pow(2, 10 * (t - 1)) + b;\n        }\n        return c / 2 * (-Math.pow(2, -10 * --t) + 2) + b;\n    };\n    ;\n    RoundProgressEase.prototype.easeInCirc = function (t, b, c, d) {\n        return -c * (Math.sqrt(1 - (t /= d) * t) - 1) + b;\n    };\n    ;\n    RoundProgressEase.prototype.easeOutCirc = function (t, b, c, d) {\n        return c * Math.sqrt(1 - (t = t / d - 1) * t) + b;\n    };\n    ;\n    RoundProgressEase.prototype.easeInOutCirc = function (t, b, c, d) {\n        if ((t /= d / 2) < 1) {\n            return -c / 2 * (Math.sqrt(1 - t * t) - 1) + b;\n        }\n        return c / 2 * (Math.sqrt(1 - (t -= 2) * t) + 1) + b;\n    };\n    ;\n    RoundProgressEase.prototype.easeInElastic = function (t, b, c, d) {\n        var s = 1.70158;\n        var p = d * 0.3;\n        var a = c;\n        if (t == 0) {\n            return b;\n        }\n        if ((t /= d) == 1) {\n            return b + c;\n        }\n        if (a < Math.abs(c)) {\n            a = c;\n            s = p / 4;\n        }\n        else {\n            s = p / (2 * Math.PI) * Math.asin(c / a);\n        }\n        return -(a * Math.pow(2, 10 * (t--)) * Math.sin((t * d - s) * (2 * Math.PI) / p)) + b;\n    };\n    ;\n    RoundProgressEase.prototype.easeOutElastic = function (t, b, c, d) {\n        var s = 1.70158;\n        var p = d * 0.3;\n        var a = c;\n        if (t == 0) {\n            return b;\n        }\n        if ((t /= d) == 1) {\n            return b + c;\n        }\n        if (a < Math.abs(c)) {\n            a = c;\n            s = p / 4;\n        }\n        else {\n            s = p / (2 * Math.PI) * Math.asin(c / a);\n        }\n        return a * Math.pow(2, -10 * t) * Math.sin((t * d - s) * (2 * Math.PI) / p) + c + b;\n    };\n    ;\n    RoundProgressEase.prototype.easeInOutElastic = function (t, b, c, d) {\n        var s = 1.70158;\n        var p = d * (0.3 * 1.5);\n        var a = c;\n        if (t == 0) {\n            return b;\n        }\n        if ((t /= d / 2) == 2) {\n            return b + c;\n        }\n        if (a < Math.abs(c)) {\n            a = c;\n            s = p / 4;\n        }\n        else {\n            s = p / (2 * Math.PI) * Math.asin(c / a);\n        }\n        if (t < 1) {\n            return -0.5 * (a * Math.pow(2, 10 * (t -= 1)) *\n                Math.sin((t * d - s) * (2 * Math.PI) / p)) + b;\n        }\n        return a * Math.pow(2, -10 * (t -= 1)) *\n            Math.sin((t * d - s) * (2 * Math.PI) / p) * 0.5 + c + b;\n    };\n    ;\n    RoundProgressEase.prototype.easeInBack = function (t, b, c, d, s) {\n        if (s === void 0) { s = 1.70158; }\n        return c * (t /= d) * t * ((s + 1) * t - s) + b;\n    };\n    ;\n    RoundProgressEase.prototype.easeOutBack = function (t, b, c, d, s) {\n        if (s === void 0) { s = 1.70158; }\n        return c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;\n    };\n    ;\n    RoundProgressEase.prototype.easeInOutBack = function (t, b, c, d, s) {\n        if (s === void 0) { s = 1.70158; }\n        if ((t /= d / 2) < 1) {\n            return c / 2 * (t * t * (((s *= 1.525) + 1) * t - s)) + b;\n        }\n        return c / 2 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2) + b;\n    };\n    ;\n    RoundProgressEase.prototype.easeInBounce = function (t, b, c, d) {\n        return c - this.easeOutBounce(d - t, 0, c, d) + b;\n    };\n    ;\n    RoundProgressEase.prototype.easeOutBounce = function (t, b, c, d) {\n        if ((t /= d) < (1 / 2.75)) {\n            return c * (7.5625 * t * t) + b;\n        }\n        else if (t < (2 / 2.75)) {\n            return c * (7.5625 * (t -= (1.5 / 2.75)) * t + 0.75) + b;\n        }\n        else if (t < (2.5 / 2.75)) {\n            return c * (7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375) + b;\n        }\n        return c * (7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375) + b;\n    };\n    ;\n    RoundProgressEase.prototype.easeInOutBounce = function (t, b, c, d) {\n        if (t < d / 2) {\n            return this.easeInBounce(t * 2, 0, c, d) * 0.5 + b;\n        }\n        return this.easeOutBounce(t * 2 - d, 0, c, d) * 0.5 + c * 0.5 + b;\n    };\n    ;\n    RoundProgressEase.decorators = [\n        { type: core_1.Injectable },\n    ];\n    return RoundProgressEase;\n}());\nexports.RoundProgressEase = RoundProgressEase;\n/**\n * TERMS OF USE - EASING EQUATIONS\n * Open source under the BSD License.\n\n * Copyright © 2001 Robert Penner\n * All rights reserved.\n * Redistribution and use in source and binary forms, with or without modification, are permitted\n * provided that the following conditions are met:\n\n * Redistributions of source code must retain the above copyright notice, this list of conditions\n * and the following disclaimer.\n *\n * Redistributions in binary form must reproduce the above copyright notice, this list of conditions\n * and the following disclaimer in the documentation and/or other materials provided with the\n * distribution.\n *\n * Neither the name of the author nor the names of contributors may be used to endorse or promote\n * products derived from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR\n * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n * FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR\n * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN\n * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n//# sourceMappingURL=round-progress.ease.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/angular-svg-round-progressbar/dist/round-progress.ease.js\n// module id = 832\n// module chunks = 4","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@angular/core\");\nvar round_progress_service_1 = require(\"./round-progress.service\");\nvar round_progress_config_1 = require(\"./round-progress.config\");\nvar round_progress_ease_1 = require(\"./round-progress.ease\");\nvar RoundProgressComponent = /** @class */ (function () {\n    function RoundProgressComponent(_service, _easing, _defaults, _ngZone, _renderer) {\n        this._service = _service;\n        this._easing = _easing;\n        this._defaults = _defaults;\n        this._ngZone = _ngZone;\n        this._renderer = _renderer;\n        this._lastAnimationId = 0;\n        this.radius = this._defaults.radius;\n        this.animation = this._defaults.animation;\n        this.animationDelay = this._defaults.animationDelay;\n        this.duration = this._defaults.duration;\n        this.stroke = this._defaults.stroke;\n        this.color = this._defaults.color;\n        this.background = this._defaults.background;\n        this.responsive = this._defaults.responsive;\n        this.clockwise = this._defaults.clockwise;\n        this.semicircle = this._defaults.semicircle;\n        this.rounded = this._defaults.rounded;\n        this.onRender = new core_1.EventEmitter();\n    }\n    /** Animates a change in the current value. */\n    /** Animates a change in the current value. */\n    RoundProgressComponent.prototype._animateChange = /** Animates a change in the current value. */\n    function (from, to) {\n        var _this = this;\n        if (typeof from !== 'number') {\n            from = 0;\n        }\n        to = this._clamp(to);\n        from = this._clamp(from);\n        var self = this;\n        var changeInValue = to - from;\n        var duration = self.duration;\n        // Avoid firing change detection for each of the animation frames.\n        self._ngZone.runOutsideAngular(function () {\n            var start = function () {\n                var startTime = self._service.getTimestamp();\n                var id = ++self._lastAnimationId;\n                requestAnimationFrame(function animation() {\n                    var currentTime = Math.min(self._service.getTimestamp() - startTime, duration);\n                    var value = self._easing[self.animation](currentTime, from, changeInValue, duration);\n                    self._setPath(value);\n                    self.onRender.emit(value);\n                    if (id === self._lastAnimationId && currentTime < duration) {\n                        requestAnimationFrame(animation);\n                    }\n                });\n            };\n            if (_this.animationDelay > 0) {\n                setTimeout(start, _this.animationDelay);\n            }\n            else {\n                start();\n            }\n        });\n    };\n    /** Sets the path dimensions. */\n    /** Sets the path dimensions. */\n    RoundProgressComponent.prototype._setPath = /** Sets the path dimensions. */\n    function (value) {\n        if (this._path) {\n            this._renderer.setElementAttribute(this._path.nativeElement, 'd', this._service.getArc(value, this.max, this.radius - this.stroke / 2, this.radius, this.semicircle));\n        }\n    };\n    /** Clamps a value between the maximum and 0. */\n    /** Clamps a value between the maximum and 0. */\n    RoundProgressComponent.prototype._clamp = /** Clamps a value between the maximum and 0. */\n    function (value) {\n        return Math.max(0, Math.min(value || 0, this.max));\n    };\n    /** Determines the SVG transforms for the <path> node. */\n    /** Determines the SVG transforms for the <path> node. */\n    RoundProgressComponent.prototype.getPathTransform = /** Determines the SVG transforms for the <path> node. */\n    function () {\n        var diameter = this._diameter;\n        if (this.semicircle) {\n            return this.clockwise ?\n                \"translate(0, \" + diameter + \") rotate(-90)\" :\n                \"translate(\" + (diameter + ',' + diameter) + \") rotate(90) scale(-1, 1)\";\n        }\n        else if (!this.clockwise) {\n            return \"scale(-1, 1) translate(-\" + diameter + \" 0)\";\n        }\n    };\n    /** Resolves a color through the service. */\n    /** Resolves a color through the service. */\n    RoundProgressComponent.prototype.resolveColor = /** Resolves a color through the service. */\n    function (color) {\n        return this._service.resolveColor(color);\n    };\n    /** Change detection callback. */\n    /** Change detection callback. */\n    RoundProgressComponent.prototype.ngOnChanges = /** Change detection callback. */\n    function (changes) {\n        if (changes.current) {\n            this._animateChange(changes.current.previousValue, changes.current.currentValue);\n        }\n        else {\n            this._setPath(this.current);\n        }\n    };\n    Object.defineProperty(RoundProgressComponent.prototype, \"_diameter\", {\n        /** Diameter of the circle. */\n        get: /** Diameter of the circle. */\n        function () {\n            return this.radius * 2;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RoundProgressComponent.prototype, \"_elementHeight\", {\n        /** The CSS height of the wrapper element. */\n        get: /** The CSS height of the wrapper element. */\n        function () {\n            if (!this.responsive) {\n                return (this.semicircle ? this.radius : this._diameter) + 'px';\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RoundProgressComponent.prototype, \"_viewBox\", {\n        /** Viewbox for the SVG element. */\n        get: /** Viewbox for the SVG element. */\n        function () {\n            var diameter = this._diameter;\n            return \"0 0 \" + diameter + \" \" + (this.semicircle ? this.radius : diameter);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RoundProgressComponent.prototype, \"_paddingBottom\", {\n        /** Bottom padding for the wrapper element. */\n        get: /** Bottom padding for the wrapper element. */\n        function () {\n            if (this.responsive) {\n                return this.semicircle ? '50%' : '100%';\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    RoundProgressComponent.decorators = [\n        { type: core_1.Component, args: [{\n                    selector: 'round-progress',\n                    template: \"\\n    <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" [attr.viewBox]=\\\"_viewBox\\\">\\n      <circle\\n        fill=\\\"none\\\"\\n        [attr.cx]=\\\"radius\\\"\\n        [attr.cy]=\\\"radius\\\"\\n        [attr.r]=\\\"radius - stroke / 2\\\"\\n        [style.stroke]=\\\"resolveColor(background)\\\"\\n        [style.stroke-width]=\\\"stroke\\\"/>\\n\\n      <path\\n        #path\\n        fill=\\\"none\\\"\\n        [style.stroke-width]=\\\"stroke\\\"\\n        [style.stroke]=\\\"resolveColor(color)\\\"\\n        [style.stroke-linecap]=\\\"rounded ? 'round' : ''\\\"\\n        [attr.transform]=\\\"getPathTransform()\\\"/>\\n    </svg>\\n  \",\n                    host: {\n                        'role': 'progressbar',\n                        '[attr.aria-valuemin]': 'current',\n                        '[attr.aria-valuemax]': 'max',\n                        '[style.width]': \"responsive ? '' : _diameter + 'px'\",\n                        '[style.height]': '_elementHeight',\n                        '[style.padding-bottom]': '_paddingBottom',\n                        '[class.responsive]': 'responsive'\n                    },\n                    styles: [\n                        \":host {\\n      display: block;\\n      position: relative;\\n      overflow: hidden;\\n    }\",\n                        \":host.responsive {\\n      width: 100%;\\n      padding-bottom: 100%;\\n    }\",\n                        \":host.responsive > svg {\\n      position: absolute;\\n      width: 100%;\\n      height: 100%;\\n      top: 0;\\n      left: 0;\\n    }\"\n                    ]\n                },] },\n    ];\n    /** @nocollapse */\n    RoundProgressComponent.ctorParameters = function () { return [\n        { type: round_progress_service_1.RoundProgressService, },\n        { type: round_progress_ease_1.RoundProgressEase, },\n        { type: undefined, decorators: [{ type: core_1.Inject, args: [round_progress_config_1.ROUND_PROGRESS_DEFAULTS,] },] },\n        { type: core_1.NgZone, },\n        { type: core_1.Renderer, },\n    ]; };\n    RoundProgressComponent.propDecorators = {\n        \"_path\": [{ type: core_1.ViewChild, args: ['path',] },],\n        \"current\": [{ type: core_1.Input },],\n        \"max\": [{ type: core_1.Input },],\n        \"radius\": [{ type: core_1.Input },],\n        \"animation\": [{ type: core_1.Input },],\n        \"animationDelay\": [{ type: core_1.Input },],\n        \"duration\": [{ type: core_1.Input },],\n        \"stroke\": [{ type: core_1.Input },],\n        \"color\": [{ type: core_1.Input },],\n        \"background\": [{ type: core_1.Input },],\n        \"responsive\": [{ type: core_1.Input },],\n        \"clockwise\": [{ type: core_1.Input },],\n        \"semicircle\": [{ type: core_1.Input },],\n        \"rounded\": [{ type: core_1.Input },],\n        \"onRender\": [{ type: core_1.Output },],\n    };\n    return RoundProgressComponent;\n}());\nexports.RoundProgressComponent = RoundProgressComponent;\n//# sourceMappingURL=round-progress.component.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/angular-svg-round-progressbar/dist/round-progress.component.js\n// module id = 833\n// module chunks = 4","import {Component} from '@angular/core';\nimport {IonicPage} from 'ionic-angular';\nimport { APIService } from \"../../../services/api_service\";\n\n/**\n * Component for profile editing\n */\n@IonicPage()\n@Component({\n  selector: 'loyalty',\n  templateUrl: 'loyalty.html',\n})\nexport class LoyaltyPage {\n  public userData: any = {};\n  public settings: any = {};\n\n  constructor(\n    private apiService: APIService\n  ) {\n  }\n\n  ionViewWillEnter() {\n    this.settings = this.apiService.getSettings();\n    this.apiService.loadUserData().then(user => {\n      this.userData = user;\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/personal/loyalty/loyalty.ts","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@angular/core\");\nvar common_1 = require(\"@angular/common\");\nvar round_progress_component_1 = require(\"./round-progress.component\");\nvar round_progress_service_1 = require(\"./round-progress.service\");\nvar round_progress_ease_1 = require(\"./round-progress.ease\");\nvar round_progress_config_1 = require(\"./round-progress.config\");\nvar RoundProgressModule = /** @class */ (function () {\n    function RoundProgressModule() {\n    }\n    RoundProgressModule.decorators = [\n        { type: core_1.NgModule, args: [{\n                    imports: [common_1.CommonModule],\n                    declarations: [round_progress_component_1.RoundProgressComponent],\n                    exports: [round_progress_component_1.RoundProgressComponent],\n                    providers: [round_progress_service_1.RoundProgressService, round_progress_ease_1.RoundProgressEase, round_progress_config_1.ROUND_PROGRESS_DEFAULTS_PROVIDER]\n                },] },\n    ];\n    return RoundProgressModule;\n}());\nexports.RoundProgressModule = RoundProgressModule;\n;\n__export(require(\"./round-progress.component\"));\n__export(require(\"./round-progress.service\"));\n__export(require(\"./round-progress.ease\"));\n__export(require(\"./round-progress.config\"));\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/angular-svg-round-progressbar/dist/index.js\n// module id = 847\n// module chunks = 4"],"sourceRoot":""}